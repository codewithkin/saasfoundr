{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/lib/auth.ts"],"sourcesContent":["import { AuthConfig } from \"@auth/core\"\nimport GitHub from \"@auth/core/providers/github\"\nimport Google from \"@auth/core/providers/google\"\nimport { PrismaAdapter } from \"@auth/prisma-adapter\"\nimport { PrismaClient } from \"@prisma/client\"\nimport Nodemailer from \"@auth/core/providers/nodemailer\"\n\nconst prisma = new PrismaClient()\n\nexport const authConfig: AuthConfig = {\n  adapter: PrismaAdapter(prisma),\n  providers: [\n    GitHub({\n      clientId: process.env.GITHUB_ID,\n      clientSecret: process.env.GITHUB_SECRET,\n    }),\n    Google({\n      clientId: process.env.GOOGLE_ID,\n      clientSecret: process.env.GOOGLE_SECRET,\n    }),\n    Nodemailer({\n      server: {\n        host: process.env.EMAIL_SERVER_HOST,\n        port: process.env.EMAIL_SERVER_PORT,\n        auth: {\n          user: process.env.EMAIL_SERVER_USER,\n          pass: process.env.EMAIL_SERVER_PASSWORD,\n        },\n      },\n      from: process.env.EMAIL_FROM,\n    }),\n  ],\n  session: {\n    strategy: \"jwt\",\n  },\n  pages: {\n    signIn: \"/auth/signin\",\n  },\n}\n\nexport const { handlers, auth, signIn, signOut } = Auth(authConfig)\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AACA;AAEA;AADA;;;;;;AAGA,MAAM,SAAS,IAAI,6IAAA,CAAA,eAAY;AAExB,MAAM,aAAyB;IACpC,SAAS,CAAA,GAAA,oJAAA,CAAA,gBAAa,AAAD,EAAE;IACvB,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAM,AAAD,EAAE;YACL,UAAU,QAAQ,GAAG,CAAC,SAAS;YAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;QACzC;QACA,CAAA,GAAA,qJAAA,CAAA,UAAM,AAAD,EAAE;YACL,UAAU,QAAQ,GAAG,CAAC,SAAS;YAC/B,cAAc,QAAQ,GAAG,CAAC,aAAa;QACzC;QACA,CAAA,GAAA,yJAAA,CAAA,UAAU,AAAD,EAAE;YACT,QAAQ;gBACN,MAAM,QAAQ,GAAG,CAAC,iBAAiB;gBACnC,MAAM,QAAQ,GAAG,CAAC,iBAAiB;gBACnC,MAAM;oBACJ,MAAM,QAAQ,GAAG,CAAC,iBAAiB;oBACnC,MAAM,QAAQ,GAAG,CAAC,qBAAqB;gBACzC;YACF;YACA,MAAM,QAAQ,GAAG,CAAC,UAAU;QAC9B;KACD;IACD,SAAS;QACP,UAAU;IACZ;IACA,OAAO;QACL,QAAQ;IACV;AACF;AAEO,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,KAAK"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { auth } from \"@/lib/auth\";\n\nexport default async function middleware(request) {\n  const session = await auth.getSession(request);\n\n  if (!session) {\n    return NextResponse.redirect(\"/auth/signin\");\n  }\n\n  return NextResponse.next();\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AADA;;;AAGe,eAAe,WAAW,OAAO;IAC9C,MAAM,UAAU,MAAM,kHAAA,CAAA,OAAI,CAAC,UAAU,CAAC;IAEtC,IAAI,CAAC,SAAS;QACZ,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,OAAO,qLAAA,CAAA,eAAY,CAAC,IAAI;AAC1B"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}