// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  field         String?
  role          String?
  looking_for   String?
  connections   User[]    @relation("UserConnections")
  followed_by   User[]    @relation("UserFollowedBy")
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
  saasProducts  SaaSProduct[]
  connectionsFrom User[] @relation("UserConnections")
  followedBy User[] @relation("UserFollowedBy")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Post {
  post_id      String   @id @default(cuid())
  user_id      String
  content      String   @db.Text
  created_at   DateTime @default(now())
  user         User     @relation(fields: [user_id], references: [id])
}

model SaaSProduct {
  product_id   String   @id @default(cuid())
  user_id      String
  saas_name    String
  image        String
  url          String
  description  String   @db.Text
  features     Json
  users        Int
  mrr          Float
  user         User     @relation(fields: [user_id], references: [id])
}